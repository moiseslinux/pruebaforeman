---
- name: INSTALL BASIC PACKAGES 
  yum:
    name: "{{ software_packages.packages}}"
    state: present 
  tags:
    - yum

- name: EDIT RESOLV 
  lineinfile:
    path: /etc/resolv.conf
    state: present
    line: "{{ item }}"
  loop: "{{ dc.nameserver }}"

#- lineinfile:
#    path: /etc/hosts
#    regexp: '\172.16.21.7 h15256.redocu.lan'
#    state: absent
#    backup: yes

- name: EDIT KDC 
  replace:
    path: /var/kerberos/krb5kdc/kdc.conf
    regexp: 'EXAMPLE.COM'
    replace: '{{ dc.name }}'

- name: EDIT KRB5
  copy:
    src: templates/krb5.conf
    dest: /etc/krb5.conf 
    owner: root
    group: root
    mode: u=rw,g=r,o=r

- name: EDIT KADM5
  replace:
    path: /var/kerberos/krb5kdc/kadm5.acl
    regexp: 'EXAMPLE.COM'
    replace: '{{ dc.name }}'

- name: VALIDATE DB Kerberos
  stat:
    path: /var/kerberos/krb5kdc/principal
  register: stat_result 
    
- name: CREATE DB KERBEROS 
  shell: kdb5_util create -s -r "{{ dc.name }}" -P kerberos2019
  when: stat_result.stat.exists == False

- name: MAKE SURE KRB5 SERVICE IS RUNNING
  systemd:
    state: started
    name: "{{ item }}"
    enabled: yes
  loop: "{{ services.krb5 }}"

- name: VALIDATE PRINCIPAL USERS
  shell: kadmin.local -q "getprinc {{ item.key }}"
  with_dict: "{{ dc.princs }}"
  changed_when: false 
  register: princs

- name: CREATE PRINCIPAL USERS 
  shell: kadmin.local -q "addprinc -pw {{ item.value }} {{ item.key }}"
  when: '"Principal does not exist" in princs.results[0].stderr'
  with_dict: "{{ dc.princs }}"

- name: ADD KDC HOSTNAME TO DB KERBEROS
  shell: addprinc -randkey "{{ ansible_fqdn }}/{{ dc.machine }}"


- name: ADD KDC HOSTNAME TO DB KERBEROS
  shell: ktadd "{{ ansible_fqdn }}/{{ dc.machine }}"
  

- name: EDIT KADM5
  lineinfile:
    path: /etc/ssh/sshd_config
    regexp: '^GSSAPIAuthentication'
    line: 'GSSAPIAuthentication yes'


- name: RELOAD SSHD SERVICE
  systemd:
    name: sshd
    state: reloaded
    enabled: yes

- name: CONFIGURE PAM COMPONENT
  shell: authconfig â€“enablekrb5 --update


- name: EDIT XML KERBEROS
  copy:
    src: templates/kerberos.xml
    dest: /etc/firewalld/services/kerberos.xml 
    owner: root
    group: root
    mode: u=rw,g=r,o=r

- name: MAKE SURE NTPS SERVICE IS RUNNING
  systemd:
    state: started
    name: ntpd
    enabled: yes

- name: RELOAD SSHD SERVICE
  systemd:
    name: sshd
    state: reloaded

- name: EDIT SMB (WORKGROUP)
  lineinfile:
    path: /etc/samba/smb.conf
    regexp: '^workgroup ='
    line: 'workgroup = REDOCU'

- name: EDIT SMB (SECURITY)
  lineinfile:
    path: /etc/samba/smb.conf
    regexp: '^security ='
    line: 'security = ADS'

- name: MAKE SURE SAMBA SERVICE IS RUNNING
  systemd:
    state: started
    name: smb
    enabled: yes

- name: MAKE SURE WINBIND SERVICE IS RUNNING
  systemd:
    state: started
    name: winbind
    enabled: yes

- name: EDIT PAM_WINBIND
  copy:
    src: templates/pam_winbind.conf
    dest: /etc/smb.conf 
    owner: root
    group: root
    mode: u=rw,g=r,o=r


- name: EDIT NSSWITCH
  copy:
    src: templates/nsswitch.conf
    dest: /etc/nsswitch.conf 
    owner: root
    group: root
    mode: u=rw,g=r,o=r

- name: UNION OF THE MACHINE TO THE DOMAIN
  shell: echo '{{ dc.admin.pass }}' | kinit "{{ dc.admin.user }}@{{ dc.name }}"  

- name: UNION OF THE MACHINE TO THE DOMAIN
  shell: echo '{{ dc.admin.pass }}' |net ads join -U "{{ dc.admin.user }}"

- name: MAKE SURE SAMBA SERVICE IS RUNNING
  systemd:
    state: restarted
    name: "{{ service.common }}"
    enabled: yes

- name: VERIFICATION KADMIN.LOCAL TOOL LOG WITH USER DOMAIN
  shell: echo quit | kadmin.local


- name: LOGIN
  shell: echo 'id ; exit' |su - "{{ dc.admin.user }}"


- name: EDIT SUDOERS 
  lineinfile:
    path: /etc/sudoers
    state: present
    line: "{{ item }}"
  loop: "{{ dc.sudoerslines }}"

- name: EDIT RSYSLOG 
  lineinfile:
    path: /etc/rsyslog.conf
    state: present
    line: "{{ item }}"
  loop: "{{ dc.graylog }}"


- name: RESTART RSYSLOG SERVICE
  systemd:
    state: restarted
    name: "{{ service.common }}"
    enabled: yes


